facet_wrap(~variable, scales = "free_y") +
labs(x = "Review Count Logged", y = "Values", color = "County",
title = "Scatterplot between logged review count & neighborhood characteristics",
subtitle = "Using Yelp data in Fulton and DeKalb County, GA") +
ggpubr::stat_cor(aes(x = review_count_log, y = value))
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, fill = review_county_log)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, fill = review_count_log)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, fill = pct_white)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, fill = pct_pov)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, fill = rating)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, fill = avg_price)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
names(sj)
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, fill = pct_white)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = avg_rating)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = avg_price)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_pov)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_pov_log)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=2) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=3) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white, size=pct_white)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white)) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.9) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.8) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.5) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income") +
theme
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income") +
theme_light()
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income") +
theme_light()
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents who self-identified as white") +
theme_light()
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
theme_light()
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
scale_color_gradient(low="blue", high="red")
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
scale_color_gradient(low="blue", high="red") +
theme_light()
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
scale_color_gradient(low="blue", high="red") +
facet_wrap(~county) +
theme_light()
# Q3
sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
scale_color_gradient(low="blue", high="red") +
facet_wrap(~county) +
theme_bw()
# Q3
q3 <- sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
scale_color_gradient(low="blue", high="red") +
facet_wrap(~county) +
theme_bw()
# Q3
(q3 <- sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
scale_color_gradient(low="blue", high="red") +
facet_wrap(~county) +
theme_bw())
# Q3
(q3 <- sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
scale_color_gradient(low="blue", high="red") +
facet_wrap(~county) +
theme_bw())
ggsave(filename = here("Assignment", "mini_4", "q3.jpg"), plot = q3, scale=2)
ggsave(filename = here("Assignment", "mini_4", "q3.jpg"), plot = q3, scale=10)
ggsave(filename = here("Assignment", "mini_4", "q3.jpg"), plot = q3, scale=1)
ggsave(filename = here("Assignment", "mini_4", "q3.jpg"), plot = q3, scale=0.8)
# ------------------------------------------------------------------------------
# Q1
sj %>%
ggplot() +
geom_boxplot(mapping = aes(x=avg_rating, y = hhincome), color = 'black')
# Q3
(q3 <- sj %>%
ggplot()+
geom_point(mapping = aes(x = review_count_log, y = hhincome, color = pct_white), size=5, alpha=0.6) +
labs(title = "Scatterplot: Review Count vs. Household Income",
x = "Review Count (log)",
y = "Median Annual Household Income",
color = "Proportion of residents \nwho self-identified as white") +
scale_color_gradient(low="blue", high="red") +
facet_wrap(~county) +
theme_bw())
# theme_light()# Q4
sj %>%
pivot_longer(cols = c(pct_pov_log, hhincome, pct_white, race.tot), names_to = "variable", values_to = "value") %>%
ggplot(data = .) +
geom_point(mapping = aes(x = review_count_log, y = value, color = county)) +
geom_smooth(mapping = aes(x = review_count_log, y = value, color=county), method="lm", se=F) +
facet_wrap(~variable, scales = "free_y") +
labs(x = "Review Count Logged", y = "Values", color = "County",
title = "Scatterplot between logged review count & neighborhood characteristics",
subtitle = "Using Yelp data in Fulton and DeKalb County, GA") +
ggpubr::stat_cor(aes(x = review_count_log, y = value))
# theme_light()# Q4
sj %>%
pivot_longer(cols = c(pct_pov_log, hhincome, pct_white, race.tot), names_to = "variable", values_to = "value") %>%
ggplot(data = .) +
geom_point(mapping = aes(x = review_count_log, y = value, color = county)) +
geom_smooth(mapping = aes(x = review_count_log, y = value, color=county), method="lm", se=F) +
facet_wrap(~variable, scales = "free_y") +
labs(x = "Review Count Logged", y = "Values", color = "County",
title = "Scatterplot between logged review count & neighborhood characteristics",
subtitle = "Using Yelp data in Fulton and DeKalb County, GA") +
ggpubr::stat_cor(aes(x = review_count_log, y = value)) +
theme_bw()
# theme_light()# Q4
(q4 <- sj %>%
pivot_longer(cols = c(pct_pov_log, hhincome, pct_white, race.tot), names_to = "variable", values_to = "value") %>%
ggplot(data = .) +
geom_point(mapping = aes(x = review_count_log, y = value, color = county)) +
geom_smooth(mapping = aes(x = review_count_log, y = value, color=county), method="lm", se=F) +
facet_wrap(~variable, scales = "free_y") +
labs(x = "Review Count Logged", y = "Values", color = "County",
title = "Scatterplot between logged review count & neighborhood characteristics",
subtitle = "Using Yelp data in Fulton and DeKalb County, GA") +
ggpubr::stat_cor(aes(x = review_count_log, y = value)) +
theme_bw())
ggsave(filename = here("Assignment", "mini_4", "q4.jpg"), plot = q4, scale=0.8)
ggsave(filename = here("Assignment", "mini_4", "q4.jpg"), plot = q4, scale=1)
# theme_light()# Q4
label <- c(pct_pov_log = "Percent Residents Under Poverty",
hhincome = "Median Annual Household Income (4)",
pct_white = "Percent White Resident",
race.tot = "Total Population")
# theme_light()# Q4
label <- c(pct_pov_log = "Percent Residents Under Poverty",
hhincome = "Median Annual Household Income (4)",
pct_white = "Percent White Resident",
race.tot = "Total Population")
# theme_light()# Q4
label <- c(pct_pov_log = "Percent Residents Under Poverty",
hhincome = "Median Annual Household Income ($)",
pct_white = "Percent White Resident",
race.tot = "Total Population")
(q4 <- sj %>%
pivot_longer(cols = c(pct_pov_log, hhincome, pct_white, race.tot), names_to = "variable", values_to = "value") %>%
ggplot(data = .) +
geom_point(mapping = aes(x = review_count_log, y = value, color = county)) +
geom_smooth(mapping = aes(x = review_count_log, y = value, color=county), method="lm", se=F) +
facet_wrap(~variable, scales = "free_y", labeller = as_labeller(label)) +
labs(x = "Review Count Logged", y = "Values", color = "County",
title = "Scatterplot between logged review count & neighborhood characteristics",
subtitle = "Using Yelp data in Fulton and DeKalb County, GA") +
ggpubr::stat_cor(aes(x = review_count_log, y = value)) +
theme_bw())
plotly::ggplotly(q4)
(q4 <- sj %>%
pivot_longer(cols = c(pct_pov_log, hhincome, pct_white, race.tot), names_to = "variable", values_to = "value") %>%
ggplot(data = .) +
geom_point(mapping = aes(x = review_count_log, y = value, color = county)) +
geom_smooth(mapping = aes(x = review_count_log, y = value, color=county), method="lm", se=F) +
facet_wrap(~variable, scales = "free_y", labeller = as_labeller(label)) +
labs(x = "Review Count Logged", y = "Values", color = "County",
title = "Scatterplot between logged review count & neighborhood characteristics",
subtitle = "Using Yelp data in Fulton and DeKalb County, GA") +
ggpubr::stat_cor(aes(x = review_count_log, y = value)) +
theme_bw())
(q4 <- sj %>%
pivot_longer(cols = c(pct_pov_log, hhincome, pct_white, race.tot), names_to = "variable", values_to = "value") %>%
ggplot(data = .) +
geom_point(mapping = aes(x = review_count_log, y = value, color = county)) +
geom_smooth(mapping = aes(x = review_count_log, y = value, color=county), method="lm", se=F) +
facet_wrap(~variable, scales = "free_y", labeller = as_labeller(label)) +
labs(x = "Review Count Logged", y = "Values", color = "County",
title = "Scatterplot between logged review count & neighborhood characteristics",
subtitle = "Using Yelp data in Five Counties Around Atlanta, GA") +
ggpubr::stat_cor(aes(x = review_count_log, y = value)) +
theme_bw())
ggsave(filename = here("Assignment", "mini_4", "q4.jpg"), plot = q4, scale=1)
# ------------------------------------------------------------------------------
# Q1
(q1 <- sj %>%
ggplot() +
geom_boxplot(mapping = aes(x=avg_rating, y = hhincome), color = 'black'))
# ------------------------------------------------------------------------------
# Q1
(q1 <- sj %>%
ggplot() +
geom_boxplot(mapping = aes(x=avg_rating, y = hhincome), color = 'black'))
ggsave(filename = here("Assignment", "mini_4", "q1.jpg"), plot = q1, scale=0.8)
# Q2
(q2 <- sj %>%
ggplot() +
geom_boxplot(mapping = aes(x=avg_rating, y = hhincome), color = 'black') +
facet_wrap(~county))
# Q2
(q2 <- sj %>%
ggplot() +
geom_boxplot(mapping = aes(x=avg_rating, y = hhincome), color = 'black') +
facet_wrap(~county))
# Q2
(q2 <- sj %>%
ggplot() +
geom_boxplot(mapping = aes(x=avg_rating, y = hhincome), color = 'black') +
facet_wrap(~county) +
labs(x = "Average Yelp Rating", y = "Median Annual Household Income ($)")
)
ggsave(filename = here("Assignment", "mini_4", "q2.jpg"), plot = q2, scale=0.8)
sj
sj %>%  summary
write.csv(sj %>% select(-product), here("Assignment", "mini_4", "coffee.csv"))
sj
ggsave(filename = here("Assignment", "mini_4", "q4.jpg"), plot = q4, scale=0.7)
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus)
library(sf)
library(tmap)
library(jsonlite)
library(tidyverse)
library(httr)
library(jsonlite)
library(reshape2)
library(here)
library(yelpr)
library(knitr)
tidycensus::census_api_key(Sys.getenv("census_api"))
#### Tract polygons for the Yelp query
tract <- suppressMessages(
get_acs(geography = "tract", # or "block group", "county", "state" etc.
state = "GA",
county = c("Fulton", "Dekalb"),
variables = c(hhincome = 'B19019_001',
race.tot = "B02001_001",
race.white = "B02001_002",
race.black = 'B02001_003'
),
year = 2019,
survey = "acs5", # American Community Survey 5-year estimate
geometry = TRUE, # returns sf objects
output = "wide") # wide vs. long
)
tract
bikerentals <- readRDS("D:/Dropbox (GaTech)/Work/Working/School/UA_2022/external/Assignment/mini_3/bikerentals.rds")
bikerentals
sj <- st_join(tract, bikerentals %>% st_as_sf(coords = c(bikerentals$coordinates$latitude, bikerentals$coordinates$longitude)), crs = 4326)
sj <- st_join(tract, bikerentals %>% jsonlite::flatten() %>%  st_as_sf(coords = c('coordinates.latitude', 'coordinates.longitude')), crs = 4326)
sj <- st_join(tract, bikerentals %>% jsonlite::flatten() %>%  st_as_sf(coords = c('coordinates.latitude', 'coordinates.longitude')), crs = st_crs(tract))
sj <- st_join(tract, bikerentals %>% jsonlite::flatten() %>%  st_as_sf(coords = c('coordinates.latitude', 'coordinates.longitude'),crs = 4326) %>% st_transform(crs = st_crs(tract)) )
sj
sj <- st_join(tract, bikerentals %>% mutate(count=1)%>% jsonlite::flatten() %>%  st_as_sf(coords = c('coordinates.latitude', 'coordinates.longitude'),crs = 4326) %>% st_transform(crs = st_crs(tract)) )
sj
sj %>% group_by(GEOID) %>% summarise(n = sum(n))
sj %>% group_by(GEOID) %>% summarise(n = sum(n, na.rm=T))
sj %>% group_by(GEOID) %>% summarise(n = sum(count, na.rm=T))
sj %>% group_by(GEOID) %>% summarise(n = sum(count, na.rm=T)) %>% summary()
sj <- st_join(tract, bikerentals %>% mutate(count=1)%>% jsonlite::flatten() %>%  st_as_sf(coords = c('coordinates.longitude', 'coordinates.latitude'),crs = 4326) %>% st_transform(crs = st_crs(tract)) )
sj %>% group_by(GEOID) %>% summarise(n = sum(count, na.rm=T)) %>% summary()
sj <- st_join(tract, bikerentals %>% mutate(count=1)%>% distinct(id) %>% jsonlite::flatten() %>%  st_as_sf(coords = c('coordinates.longitude', 'coordinates.latitude'),crs = 4326) %>% st_transform(crs = st_crs(tract)) )
sj <- st_join(tract, bikerentals %>% mutate(count=1)%>% distinct(id, .keep_all=) %>% jsonlite::flatten() %>%  st_as_sf(coords = c('coordinates.longitude', 'coordinates.latitude'),crs = 4326) %>% st_transform(crs = st_crs(tract)) )
sj <- st_join(tract, bikerentals %>% mutate(count=1)%>% distinct(id, .keep_all=T) %>% jsonlite::flatten() %>%  st_as_sf(coords = c('coordinates.longitude', 'coordinates.latitude'),crs = 4326) %>% st_transform(crs = st_crs(tract)) )
sj
sj %>% group_by(GEOID) %>% summarise(n = sum(count, na.rm=T)) %>% summary()
tmap_mode('view')
tm_shape(tract) + tm_borders() + tm_shape(sj) + tm_dots()
tm_shape(tract) + tm_borders() + tm_shape(sj) + tm_dots(col = "counht")
tm_shape(tract) + tm_borders() + tm_shape(sj) + tm_dots(col = "count")
tm_shape(tract) + tm_borders() + tm_shape(sj) + tm_dots(col = "n")
tm_shape(tract) + tm_borders() + tm_shape(sj %>% group_by(GEOID) %>% summarise(count = sum(count, na.rm=T))) + tm_dots(col = "count")j
tm_shape(tract) + tm_borders() + tm_shape(sj %>% group_by(GEOID) %>% summarise(count = sum(count, na.rm=T))) + tm_dots(col = "count")
tm_shape(tract) + tm_borders() + tm_shape(sj %>% group_by(GEOID) %>% summarise(count = sum(count, na.rm=T))) + tm_dots(col = "count", jitter=0.5)
sj %>% group_by(GEOID) %>% summarise(n = sum(count, na.rm=T)) %>% arrange(desc(count))
sj %>% group_by(GEOID) %>% summarise(n = sum(count, na.rm=T)) %>% arrange(desc(n))
knitr::opts_chunk$set(echo = TRUE)
library(gt)
library(tidyverse)
library(kableExtra)
total_week = 17
weeks <- tibble(
Module = c(
rep("Preparation", 2),
rep("Module 1: <br> A walk-through of your first UA project - <br> POI & Census", 4), # 2 days, 4 weeks
rep("Module 2: <br> Transportation", 2),
rep("Module 3: <br> Image & computer vision", 2),
rep("Module 4: <br> Social media", 2),
rep("Module 5: <br> Storytelling", 2),
rep("Student Presentations", 1),
rep("Reading weeks", 2)
),
Week = as.character(rep(1:total_week))
)
weeks
total_week = 17
weeks <- tibble(
Module = c(
rep("Preparation", 2),
rep("Module 1: <br> A walk-through of your first UA project - <br> POI & Census", 4), # 2 days, 4 weeks
rep("Module 2: <br> Transportation", 2),
rep("Module 3: <br> Image & computer vision", 2),
rep("Module 4: <br> Social media", 2),
rep("Module 5: <br> Storytelling", 2),
rep("Student Presentations", 1),
rep("Reading weeks", 2)
),
Week = as.character(rep(1:total_week))
) %>%
mutate(Week = case_when(Week %in% c('1', "5", "13", "14") ~ paste0(Week, "(by Guhathakurta)")))
weeks
total_week = 17
weeks <- tibble(
Module = c(
rep("Preparation", 2),
rep("Module 1: <br> A walk-through of your first UA project - <br> POI & Census", 4), # 2 days, 4 weeks
rep("Module 2: <br> Transportation", 2),
rep("Module 3: <br> Image & computer vision", 2),
rep("Module 4: <br> Social media", 2),
rep("Module 5: <br> Storytelling", 2),
rep("Student Presentations", 1),
rep("Reading weeks", 2)
),
Week = as.character(rep(1:total_week))
) %>%
mutate(Week = case_when(Week %in% c('1', "5", "13", "14") ~ paste0(Week, "(by Guhathakurta)", TRUE ~ Week)))
weeks
total_week = 17
weeks <- tibble(
Module = c(
rep("Preparation", 2),
rep("Module 1: <br> A walk-through of your first UA project - <br> POI & Census", 4), # 2 days, 4 weeks
rep("Module 2: <br> Transportation", 2),
rep("Module 3: <br> Image & computer vision", 2),
rep("Module 4: <br> Social media", 2),
rep("Module 5: <br> Storytelling", 2),
rep("Student Presentations", 1),
rep("Reading weeks", 2)
),
Week = as.character(rep(1:total_week))
) %>%
mutate(Week = case_when(Week %in% c('1', "5", "13", "14") ~ paste0(Week, "(by Guhathakurta)"),
TRUE ~ Week))
weeks
total_week = 17
weeks <- tibble(
Module = c(
rep("Preparation", 2),
rep("Module 1: <br> A walk-through of your first UA project - <br> POI & Census", 4), # 2 days, 4 weeks
rep("Module 2: <br> Transportation", 2),
rep("Module 3: <br> Image & computer vision", 2),
rep("Module 4: <br> Social media", 2),
rep("Module 5: <br> Storytelling", 2),
rep("Student Presentations", 1),
rep("Reading weeks", 2)
),
Week = as.character(rep(1:total_week))
) %>%
mutate(Week = case_when(Week %in% c('1', "5", "13", "14") ~ paste0(Week, " (by Guhathakurta)"),
TRUE ~ Week))
